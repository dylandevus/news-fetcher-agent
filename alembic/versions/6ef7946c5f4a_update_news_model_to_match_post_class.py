"""Update News model to match Post class

Revision ID: 6ef7946c5f4a
Revises: f01dcbc87140
Create Date: 2025-04-11 20:13:08.696703

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6ef7946c5f4a'
down_revision = 'f01dcbc87140'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # Skipping all column additions since they already exist in the database
    # Only creating the index which may not have been created yet
    
    # Check if post_id column exists before creating index
    from sqlalchemy import inspect
    from sqlalchemy.engine import reflection
    conn = op.get_bind()
    inspector = inspect(conn)
    columns = [col['name'] for col in inspector.get_columns('news')]
    
    if 'post_id' in columns:
        try:
            op.create_index(op.f('ix_news_post_id'), 'news', ['post_id'], unique=False)
        except Exception:
            # Index might already exist, silently continue
            pass
    
    # No need to drop columns since we want to keep them
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('news', sa.Column('content', sa.VARCHAR(), nullable=False))
    op.add_column('news', sa.Column('published_at', sa.DATETIME(), nullable=True))
    op.drop_index(op.f('ix_news_post_id'), table_name='news')
    op.alter_column('news', 'title',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('news', 'updated_at')
    op.drop_column('news', 'created_at')
    op.drop_column('news', 'sub')
    op.drop_column('news', 'comment_url')
    op.drop_column('news', 'published_date')
    op.drop_column('news', 'url')
    op.drop_column('news', 'upvotes')
    op.drop_column('news', 'author')
    op.drop_column('news', 'text')
    op.drop_column('news', 'post_id')
    # ### end Alembic commands ###
